# dem_file: GeoTIFF DEM containing the surface to calculate contours
# interval: Contours interval
# format: OGR output format
# kernel: Size of the kernel to clean up
# epsg: target EPSG code
# python_script_path: Path of the python script
#
# ------
# output: If successful, prints the full path to the contours file. Otherwise it prints "error"

ext=""
if [ "${format}" = "GeoJSON" ]; then
    ext="json"
elif [ "${format}" = "GPKG" ]; then
    ext="gpkg"
elif [ "${format}" = "DXF" ]; then
    ext="dxf"
elif [ "${format}" = "ESRI Shapefile" ]; then
    ext="shp"
fi

${python_script_path} "${dem_file}" ${interval} --epsg ${epsg} --kernel_size ${kernel}

if [ -e "output.$$ext" ]; then
    # ESRI ShapeFile extra steps to compress into a zip archive
    # we leverage Python's shutil in this case
    if [ "${format}" = "ESRI Shapefile" ]; then
        ext="zip"
        mkdir contours/
        mv output* contours/
        echo "import shutil;shutil.make_archive('output', 'zip', 'contours/')" | python
    fi

    echo "$$(pwd)/output.$$ext"
else
    echo "error"
fi
